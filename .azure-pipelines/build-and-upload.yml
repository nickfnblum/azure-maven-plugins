# This pipeline was generated from the classic pipeline "[Maven] build-and-upload-for-endgame(release)" on 2024-01-16 with https://aka.ms/1ESPTMigration (v1.1.0): https://dev.azure.com/mseng/VSJava/_build?definitionId=11772
#
# The following items require attention:
# Variables were exported from the classic pipeline, confirm that `variables` values do not contain private information. If a variable contains private information, follow the guidance on handling secret variables: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/set-secret-variables
# Secret variable 'AZCOPY_SPA_CLIENT_SECRET' detected in `variables`, follow the guidance on handling secret variables: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/set-secret-variables
# No trigger found, defaulting to 'none'. Update the trigger as needed.
# No name found, setting the default value '$(Date:yyyyMMdd).$(Rev:r)'. This value determines how your pipeline runs are numbered. Update the name as needed: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/run-number?view=azure-devops&tabs=yaml

name: $(Date:yyyyMMdd).$(Rev:r)
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/develop
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release
trigger: none
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    pool:
      name: 1ES_JavaTooling_Pool
      image: 1ES_JavaTooling_Windows_2022
      os: windows
    sdl:
      sourceAnalysisPool:
        name: 1ES_JavaTooling_Pool
        image: 1ES_JavaTooling_Windows_2022
        os: windows
    customBuildTags:
      - MigrationTooling-mseng-VSJava-11772-Tool
    stages:
      - stage: Stage
        jobs:
          - job: Job_1
            displayName: Build & Upload
            steps:
              - checkout: self
                clean: true
                fetchTags: false
              - task: Bash@3
                displayName: Build
                inputs:
                  targetType: inline
                  script: |
                    # Validate storage path
                    AzTargetPath=$(TARGET_PATH)
                    if [[ ! "$AzTargetPath" =~ "/java/" ]]; then
                        echo "Invalid path, please follow pattern {product}/java/{version}"
                        exit -1
                    fi

                    # Install Maven
                    mvn install -DskipTests -Dcheckstyle.skip=true -Drelease -Dmaven.repo.local=./.repository

                    BuildToolkitLib=$(BUILD_TOOLKIT_LIB)
                    BuildMavenPom=$(BUILD_MAVEN_POM)
                    BuildMavenLib=$(BUILD_MAVEN_LIB)
                    BuildFunction=$(BUILD_FUNCTION)
                    BuildFunctionArchetype=$(BUILD_FUNCTION_ARCHETYPE)
                    BuildWebApp=$(BUILD_WEB_APP)
                    BuildSpringCloud=$(BUILD_SPRING_CLOUD)
                    BuildSpringApps=$(BUILD_SPRING_APPS)
                    BuildContainerApps=$(BUILD_CONTAINER_APPS)
                    BuildAzureSdkPlugin=$(BUILD_AZURE_SDK_PLUGIN)

                    mkdir .release

                    if [ "$BuildToolkitLib" == "true" ]; then
                        cp ./.repository/com/microsoft/azure/azure-toolkit-*-lib/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-toolkit-*-lib/*/*.pom ./.release
                        cp ./.repository/com/microsoft/azure/azure-toolkit-libs/*/*.pom ./.release
                    fi

                    if [ "$BuildFunction" == "true" ]; then
                        # TODO Check archetype
                        cp ./.repository/com/microsoft/azure/azure-functions-maven-plugin/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-functions-maven-plugin/*/*.pom ./.release
                    fi

                    if [ "$BuildWebApp" == "true" ]; then
                        cp ./.repository/com/microsoft/azure/azure-webapp-maven-plugin/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-webapp-maven-plugin/*/*.pom ./.release
                    fi

                    if [ "$BuildSpringCloud" == "true" ]; then
                        cp ./.repository/com/microsoft/azure/azure-spring-cloud-maven-plugin/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-spring-cloud-maven-plugin/*/*.pom ./.release
                    fi

                    if [ "$BuildSpringApps" == "true" ]; then
                        cp ./.repository/com/microsoft/azure/azure-spring-apps-maven-plugin/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-spring-apps-maven-plugin/*/*.pom ./.release
                    fi

                    if [ "$BuildContainerApps" == "true" ]; then
                        cp ./.repository/com/microsoft/azure/azure-container-apps-maven-plugin/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-container-apps-maven-plugin/*/*.pom ./.release
                    fi                    
                    
                    if [ "$BuildAzureSdkPlugin" == "true" ]; then
                        cp ./.repository/com/microsoft/azure/azure-sdk-build-tool-maven-plugin/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-sdk-build-tool-maven-plugin/*/*.pom ./.release
                    fi

                    if [ "$BuildMavenPom" == "true" ]; then
                        cp ./.repository/com/microsoft/azure/azure-maven-plugins/*/*.pom ./.release
                    fi

                    if [ "$BuildMavenLib" == "true" ]; then
                        cp ./.repository/com/microsoft/azure/azure-maven-plugin-lib/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-maven-plugin-lib/*/*.pom ./.release
                        cp ./.repository/com/microsoft/azure/azure-appservice-maven-plugin-lib/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-appservice-maven-plugin-lib/*/*.pom ./.release
                    fi

                    if [ "$BuildFunctionArchetype" == "true" ]; then
                        git clone https://github.com/microsoft/azure-maven-archetypes.git
                        mvn -f ./azure-maven-archetypes/azure-functions-archetype/pom.xml install -Dmaven.repo.local=./.repository -q
                        cp ./.repository/com/microsoft/azure/azure-functions-archetype/*/*.jar ./.release
                        cp ./.repository/com/microsoft/azure/azure-functions-archetype/*/*.pom ./.release

                        # TODO: Validate archetype maven plugin version when release archetype with maven plugin
                    fi
                    ls ./.release -al
                  failOnStderr: false

              ### Copy files for APIScan
              - task: CopyFiles@2
                displayName: 'Copy Files for APIScan'
                inputs:
                  SourceFolder: $(system.defaultworkingdirectory)/.release
                  Contents: "*.jar"
                  TargetFolder: $(Agent.TempDirectory)/APIScanFiles
                condition: and(succeeded(), ne(variables['DisableAPIScan'], 'true'))

              ### Run latest version of APIScan listed at https://www.1eswiki.com/wiki/APIScan_Build_Task
              - task: APIScan@2
                displayName: Run APIScan
                inputs:
                  softwareFolder: $(Agent.TempDirectory)/APIScanFiles
                  softwareName: 'azure-maven-plugins'
                  softwareVersionNum: '$(Build.BuildId)'
                  isLargeApp: false
                  toolVersion: 'Latest'
                condition: and(succeeded(), ne(variables['DisableAPIScan'], 'true'))
                env:
                  AzureServicesAuthConnectionString: runAs=App;AppId=$(ApiScanClientId);TenantId=$(ApiScanTenant);AppKey=$(ApiScanSecret)

              - task: AzurePowerShell@5
                displayName: 'Upload files to partner drop folder'
                inputs:
                  azureSubscription: 'azuresdkpartnerdrops_javatooling'
                  ScriptType: 'InlineScript'
                  azurePowerShellVersion: LatestVersion
                  pwsh: true
                  Inline: |
                    $TARGET_URL="https://azuresdkpartnerdrops.blob.core.windows.net/drops/$(TARGET_PATH)/"
                    azcopy remove "$TARGET_URL"
                    azcopy copy ".release/*" "$TARGET_URL"
                    echo "Resources uploaded."
                env:
                  AZCOPY_AUTO_LOGIN_TYPE: 'PSCRED'
