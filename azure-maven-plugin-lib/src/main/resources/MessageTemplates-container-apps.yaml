---
id:               configure-app-env-name
promote:          "Input the Container Apps environment name (***${default_val}***):"
default_val:      'env-${project.getArtifactId().replaceAll("[^-a-z0-9]", "").toLowerCase()}'
resource:         Environment
property:         environmentName
expression:       true
required:         true

---
id:               configure-resource-group-name
promote:          "Input the resource group name (***${default_val}***):"
default_val:      'rg-${project.getArtifactId().replaceAll("[^-a-z0-9]", "").toLowerCase()}'
expression:       true
required:         true
resource:         Environment
property:         resourceGroup

---
id:               configure-region
promote:
  header:         "Regions:"
  many:           "Select region for Container Apps:"
message:
  auto_select:    "There is only one valid region (***${ regions[0] }***) for your project, will use it automatically."
  select_none:    "You have not selected any region, 'config' will terminate."
required:         true
auto_select:      true
default_index:    0

---
id:               select-subscriptions
promote:
  header:         "Available subscription:"
  many:           "Select subscription"
required:         true
auto_select:      true
message:
  empty_options:  "Cannot find any subscriptions."
  auto_select:    "There is only one subscription (***${ subscriptions[0].displayName() }***) in your account, will use it automatically."
  select_none:    "You have not selected any subscriptions, 'config' will terminate."
default_index:    0

---
id:               select-container-apps-env
promote:
  header:         "Available Container Apps environments:"
  many:           "Select Container Apps environment for deployment:"
message:
  empty_options:  "There are no Container Apps environment in current subscription, please create it in Azure Portal."
  auto_select:    "There is only one Container Apps environment (***${ environments[0].name() }***) in current subscription, will use it automatically."
  select_none:    "You have not selected any Container Apps environment, 'config' will terminate."
required:         true
auto_select:      true
default_index:    0

---
id:               select-app
promote:
  header:         "Available container apps:"
  many:           "Select the container app for deployment:"
message:
  empty_options:  "There are no container app in current environment, please create it."
  auto_select:    "There is only one container app (***${ apps[0].name() }***) in current environment, will use it automatically."
  select_none:    "You have not selected any container app, 'config' will terminate."
required:         true
auto_select:      true
default_index:    0

---
id:               select-registry
promote:
  header:         "Available container registries:"
  many:           "Select container registry for deployment:"
message:
  empty_options:  "There are no container registry in current subscription, please create it."
  auto_select:    "There is only one container registry (***${ registries[0].name() }***) in current subscription, will use it automatically."
  select_none:    "You have not selected any container registry, 'config' will terminate."
required:         true
auto_select:      true
default_index:    0

---
id:               select-identity
promote:
  header:         "Available user assigned identities:"
  many:           "Select user assigned identity for deployment:"
message:
  empty_options:  "There are no user assigned identity in current subscription, please create it."
  auto_select:    "There is only one user assigned identity (***${ identities[0].name() }***) in current subscription, will use it automatically."
  select_none:    "You have not selected any user assigned identity, 'config' will terminate."
required:         true
auto_select:      true
default_index:    0

---
id:               select-deployment-type
promote:
  header:         "Available deployment types:"
  many:           "Select deployment type:"
required:         true
auto_select:      true
default_index:    0

---
id:               configure-app-name
promote:          "Input the app name (***${default_val}***):"
resource:         App
property:         appName
default_val:          '${project.getArtifactId().replaceAll("[^-a-z0-9]", "").toLowerCase()}'
expression:       true
required:         true

---
id:               configure-deployment-type
promote:          "Input deployment type for apps (***${schema.default}***) (Options:code/artifact/image):"
resource:         App
property:         deploymentType

---
id:               configure-code-dir
promote:          "Input directory for source code (***${schema.default}***):"
resource:         App
property:         directory

---
id:               configure-artifact-dir
promote:          "Input directory for artifact (***${schema.default}***):"
resource:         App
property:         directory

---
id:               configure-image
promote:          "Input image (***${schema.default}***):"
resource:         App
property:         image

---
id:               configure-registry-name
promote:          "Input registry name:"
resource:         App
property:         registryName

---
id:               configure-min-replicas
promote:          "Input min replicas for apps [***${schema.minimum}***-***${schema.maximum}***] (***${schema.default}***):"
resource:         App
property:         minReplicas

---
id:               configure-max-replicas
promote:          "Input max replicas for apps [***${schema.minimum}***-***${schema.maximum}***] (***${schema.default}***):"
resource:         App
property:         maxReplicas

---
id:               configure-ingress-port
promote:          "Input the target port [***${schema.minimum}***-***${schema.maximum}***] (***${schema.default}***):"
resource:         App
property:         ingressPort



---
id:               confirm
promote:
  header:         'Summary of properties:'
  footer:         "Confirm to save all the above configurations (Y/n):"
message:
  one:            'Configurations are saved to: ***${project.getFile().toString()}***'
  many:           >-
                  Configurations are saved to the following pom.xml files:${"\n"}
                  <% for(project in projects){ %>
                  ***${ project.getFile().toString()}***${"\n"}
                  <% } %>
  skip:           'You have quit the config goal, your pom files will not be changed.'
default_val:      true
required:         true
